- platform: template
  sensors:
    # miguel_state:
    #   friendly_name: "Miguel status"
    #   value_template: >-
    #     {% if not is_state("person.miguel", "home") %}
    #       Away
    #     {% elif is_state("person.miguel", "home") and is_state("input_boolean.miguel_asleep", "off") %}
    #       Home
    #     {% elif is_state("person.miguel", "home") and is_state("input_boolean.miguel_asleep", "on") %}
    #       Sleeping
    #     {% endif %}

    # amanda_state:
    #   friendly_name: "Amanda status"
    #   value_template: >-
    #     {% if not is_state("person.amanda", "home") %}
    #       Away
    #     {% elif is_state("person.amanda", "home") and is_state("input_boolean.amanda_asleep", "off") %}
    #       Home
    #     {% elif is_state("person.amanda", "home") and is_state("input_boolean.amanda_asleep", "on") %}
    #       Sleeping
    #     {% endif %}

    people_home:
      friendly_name: "Number of people at home"
      value_template: >-
        {{ [states.person.miguel, states.person.amanda] | selectattr('state', 'eq', 'home') | list | count }}
# This template will just calculate the total number when you restart home assistant since there are no states to monitor continuously --> {{ dict((states.person)|groupby('state'))['home']|count }}

# Texas A&M University FB 2019 Schedule iCal Calendar Sensors



# - platform: template
#   sensors: 
#     txagfb_2019_event_0_eta:
#       friendly_name: "First game ETA"
#       value_template: "{{ state_attr('sensor.txagFB_2019_event_0', 'eta') }}"

# UPS

# - platform: apcupsd
#   resources:
#   - linev
#   - loadpct
#   - timeleft
#   - bcharge
#   - status

##########################################################
#
# Weather
#
##########################################################



# - platform: rest
#   name: Weatherstem Temperature
#   resource: https://dallas.weatherstem.com/api
#   method: POST
#   payload: !secret Weatherstem_payload
#   device_class: temperature
#   value_template: "{{ value_json[0]['record']['readings'][10]['value'] }}"
#   unit_of_measurement: "°F"
#   json_attributes:
#     - sensor
#     - unit
#     - unit_symbol
#   json_attributes_path: '$[0].record.readings[10]'
#   scan_interval: 300

# - platform: rest
#   name: Weatherstem Temperature high
#   resource: https://dallas.weatherstem.com/api
#   method: POST
#   payload: !secret Weatherstem_payload
#   device_class: temperature
#   unit_of_measurement: "°F"
#   value_template: "{{ value_json[0]['record']['hilo']['max'] }}"
#   scan_interval: 300

##########################################################
#
# Coronavirus
#
##########################################################\

# Min/Max Sensor

- platform: min_max
  type: mean
  name: house_temperature
  entity_ids:
    - sensor.office_multi_sensor_temperature
    - sensor.master_bedroom_multi_sensor_temperature
    - sensor.living_room_multi_sensor_temperature
    - sensor.kitchen_multi_sensor_temperature

- platform: min_max
  type: mean
  name: thermostat_temperature
  entity_ids:
    - sensor.downstairs_thermostat_air_temperature
    - sensor.upstairs_thermostat_air_temperature

# Home Assistant Uptime Sensor

- platform: uptime
  name: Home Assistant Uptime